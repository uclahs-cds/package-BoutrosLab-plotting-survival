[{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Boutros. Maintainer.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boutros DPC (2023). BoutrosLab.plotting.survival: Functions Plot Survival Data. R package version 3.0.10, https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/.","code":"@Manual{,   title = {BoutrosLab.plotting.survival: Functions to Plot Survival Data},   author = {Dr. Paul C. Boutros},   year = {2023},   note = {R package version 3.0.10},   url = {https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/}, }"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"major plotting function takes meta-analytic dataset feature-name outputs survival curve based dataset-wise median dichotomization feature.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"","code":"create.gene.meta.prognosis.plot(file.stem, feature.name, tumour.types = 'all',     main = '', rounding = 2, enable.warnings = TRUE, description = NULL);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"file.stem stem filename used create tumour-specific plot feature.name name feature dichotomized tumour.types tumour types run (defaults ). NOTE: '' include prostate cancer methylation dataset. main Add main title plot (must plot). Defaults empty string rounding many decimal places precision shown printed survival statistics? enable.warnings Print warnings set TRUE, defaults FALSE description Short description image/plot; defaults NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"Creates survival curve meta-dichotomization feature site-specific cancer datasets.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Kaplan-Meier plots by meta-dichotomizing a feature separately in each dataset — create.gene.meta.prognosis.plot","text":"","code":"#create.gene.meta.prognosis.plot( #  file.stem = 'create_gene_meta_prognosis_plot', #  feature.name = '100_at', #  tumour.types = 'ovarian' #  );  #create.gene.meta.prognosis.plot( #  file.stem = 'create_gene_meta_prognosis_plot', #  feature.name = '100_at' #  );"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"major plotting function takes meta-analytic dataset feature-name outputs survival curve based dataset-wise median dichotomization feature.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"","code":"create.gene.meta.prognosis.plots(file.stem, feature.names, tumour.types = 'all',     mains = NA, rounding = 2, enable.warnings = TRUE, description = NULL);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"file.stem stem filename used create tumour-specific plot feature.names vector giving name feature dichotomized tumour.types tumour types run (defaults ). NOTE: '' include prostate cancer methylation dataset. mains vector main titles plot (must plot feature). Defaults empty string rounding many decimal places precision shown printed survival statistics? enable.warnings Print warnings set TRUE, defaults FALSE description Short description image/plot; defaults NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"Creates survival curve meta-dichotomization many feature site-specific cancer datasets.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.gene.meta.prognosis.plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Kaplan-Meier plots of many features by meta-dichotomizing each separately in each dataset — create.gene.meta.prognosis.plots","text":"","code":"#create.gene.meta.prognosis.plots( #  file.stem = 'create_gene_meta_prognosis_plot', #  feature.names = c('100_at', '1000_at'), #  tumour.types = c('nsclc') #  );"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make complete Kaplan-Meier plots — create.km.plot","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"utility function makes pretty Kaplan-Meier survival curve given survival data patient grouping. highly general function little survival data .","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"","code":"create.km.plot(   survival.object,    patient.groups = NA,    filename = NULL,    xat = NA,    yat = seq(0,1,0.2),   xlimits = NA,    ylimits = c(0,1.03),   xaxis.cex = 2,   yaxis.cex = 2,   xlab.label = 'Time (Months)',   xlab.cex = 2.75,   ylab.label = 'Estimated Proportion',   ylab.cex = 2.75,         xaxis.fontface = 'bold',         yaxis.fontface = 'bold',   risk.labels = NA,   key.groups.labels = levels(as.factor(patient.groups)),   key.groups.cex = 2,   risk.label.pos = NA,   risk.label.fontface = 'bold',   key.groups.title = NULL,    key.groups.title.cex = 1.4,   key.stats.cex = 1.5,   explicit.HR.label = TRUE,   main = NULL,    main.cex = 3.0,   covariates = NULL,   stratification.factor = NULL,   stratification.value = NULL,   lwd = 2,   lty = 1,   censoring.pch.cex = 1.1,   digits = 2,    line.colours = NA,    statistical.method = NA,   predefined.p = NULL,   predefined.hr = NULL,   predefined.hr.ci = NULL,   predefined.p.statistic.type = 'P',   ph.assumption.check = \"warning\",   cox.zph.threshold = 0.1,    cox.zph.truncation.thresholds = c(5, 10),   show.key.groups = NA,    show.risktable = TRUE,   risktable.fontsize = NULL,    key.groups.corner = c(0,0),    key.groups.x.pos = 0,    key.groups.y.pos = 0.01,    key.stats.corner = c(1,0),    key.stats.x.pos = 1,    key.stats.y.pos = 0.01,    ylab.axis.padding = 1,   bottom.padding = 2,     top.padding = 0.1,   right.padding = 0.1,   left.padding = 0.5,   return.statistics = FALSE,   height = 7,    width = 7,    style = 'BoutrosLab',   resolution = 1000,    size.units = 'in',    enable.warnings = TRUE,   description = NULL,   use.legacy.settings = FALSE    );"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"survival.object object class Surv -- patient ordering needs identical patient.groups patient.groups Factor vector representing grouping patients.  first level factor baseline risk group, used 'cox' selected statistical method.  Note even statistical.method = NA, cox method may selected function, judicious choice made.  patient.groups factor, coerced factor variable, baseline risk group taken risk group comes first alpha-numerically.  plot, baseline risk group appears first risk table legend, Kaplan-Meier estimate plotted blue.  plot survival curves subset groups factor, specifies desired groups \"levels\" argument factor. filename filename written xat vector listing points x-axis labels drawn yat vector listing points y-axis labels drawn.  Defaults seq(0,1,0.2) xlimits two component vector listing upper lower bounds x-axis (time dimension) ylimits two component vector listing upper lower bounds y-axis.  Defaults c(0,1.03) xaxis.cex Size x-axis scales, defaults 2 yaxis.cex Size y-axis scales, defaults 2 xlab.label X Axis Title xlab.cex Size x-axis labels, defaults 2.75 ylab.label Y Axis Title.  Defaults \"Proportion\", customized better describe survival outcome interest. ylab.cex Size y-axis labels, defaults 2.75 xaxis.fontface font face xaxis, defaults bold yaxis.fontface font face yaxis, defaults bold risk.labels character vector gives labels risk groups risk table.  Defaults full name risk group one risk group, blank string otherwise.  Useful replace long names shorter ones.) key.groups.labels character vector gives labels legend (listing name line colour group).  Defaults full name risk groups.  Useful replace long names shorter ones. key.groups.cex Size key groups text risk.label.pos value x-axis position risk labels (risk table KM plot).  value typically negative, order appear left value '0' x axis. risk.label.fontface font face risk group label.  Defaults 'bold'.  Set NULL plain font face wanted risk group label. key.groups.title Title legend listing group names line colours.  Defaults NULL. key.groups.title.cex Font size title legend listing group names line colours.  Defaults 2.2 (default cex group names 2). key.stats.cex Font size statisitcal results key. Defaults 1.5 explicit.HR.label TRUE, prints label comparison risk group subscript HR.  effect cox statistical method used.  Defaults TRUE. main main title plot (space reclaimed NULL) main.cex Size text main plot title covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. stratification.factor building cox model statistical analysis purposes, resulting cox model stratified stratification.factor (non-NULL).  User needs provide factor vector specify stratification.factor Defaults NULL. stratification.value pre-determined value split stratification factor (.e. strata(stratification.factor > stratification.value)) lwd Specifies line width, defaults 2.5 lty Specifies line type, defaults 1 censoring.pch.cex Specifies length tick marks indicating censoring events, defaults 1.1 digits many decimal places precision shown printed survival statistics line.colours vector colours used plotting.  Defaults survival palette BoutrosLab.plotting.general::default.colours statistical.method string indicating statistical test done ('cox', 'logrank', 'ttest', 'none'). NA, tries choose intelligently predefined.p predefined p value (e.g. log likelihood test) display plot PLACE statistical test () predefined.hr predefined hazard ratio value display plot PLACE hazard ratio calculated cox test.value displayed cox test used. user provides predefined hazard ratio, MUST specify confidence interval (see predefined.hr.ci) predefined.hr.ci vector two numeric values representing boundaries confidence interval associated predefined hazard ratio. vector provided predefined hazard ratio specified. predefined.p.statistic.type String giving type predefined p-value statistic displayed. Passed directly display.statistical.result function BPG. Defaults 'P'. ph.assumption.check string indicating result Proportional Hazards assumption check (using cox.zph function) reported.  \"warning\", warning printed plot pvalue cox.zph smaller cox.zph.threshold.  \"warning..plot\", warning printed plot Schoenfeld residual plot produced saved pvalue smaller cox.zph.threshold.  \"logrank\", statistical method changed logrank pvalue smaller cox.zph.threshold.  \"residual.plot\", Schoenfled residual plot produced saved tiff, matter results cox.zph test .  \"ignore\", cox.zph test performed .  Defaults \"warning\". cox.zph.threshold Numeric value, 0 1).  pvalue cox.zph test smaller cox.zph.threshold, warnings provided user, indicating PH assumption may valid.  Defaults 0.1 cox.zph.truncation.thresholds ph.assumption.check 'ignore', variable fails CPH assumption, multi-point table generated CPH results variables multiple time points. truncation points specified , indicate time points split survival data. See BoutrosLab.statistics.general/R/multi.point.HR.table.R show.key.groups Defaults FALSE one risk group, TRUE otherwise show.risktable Defaults TRUE optimal display values listed corresponding number risk groups optimal.risktable.parameters.txt file inst directory (currently 1 10 risk groups).  Otherwise, defaults FALSE. risktable.fontsize font size risk group table. Defaults optimal.risktable.parameters. key.groups.corner two-component vector specifiying corner groups key anchored key.groups.x.pos key.groups.y.pos.  Defaults c(0,0), .e. bottom left corner. key.groups.x.pos Specifies x position groups key (scale 0-1).  Defaults 0 key.groups.y.pos Specifies y position groups key (scale 0-1).  Defaults 0.01 key.stats.corner two-component vector specifying corner statistical results key anchored key.stats.x.pos key.stats.y.pos.  Defaults c(1,0), .e. bottom right corner. key.stats.x.pos Specifies x position statistical results key (scale 0-1).  Defaults 1 key.stats.y.pos Specifies y position statistical results key (scale 0-1).  Defaults 0.01 ylab.axis.padding number specifying distance ylabel y-axis, defaults 1.  parameter (along left.padding) can changed make space display long group names risk table. bottom.padding number specifying distance bottom margin, defaults 0.7 top.padding number specifying distance top margin, defaults 0.1 right.padding number specifying distance right margin, defaults 0.1 left.padding number specifying distance left margin, defaults 0.5.  parameter (along ylab.axis.padding) can changed make space display long group names risk table. return.statistics TRUE, function return list containing trellis object (0/1 indicator) relevant statistics.  FALSE, statistics returned.  Defaults FALSE. height Figure height size.units width Figure width size.units style defaults “BoutrosLab”, also accepts “Nature”, changes parameters according Nature formatting requirements resolution Figure resolution dpi size.units Units size figure enable.warnings Print warnings set TRUE, defaults TRUE description short description image/plot; defaults null use.legacy.settings boolean set wheter use legacy mode settings (font)","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"return.stats TRUE: filename NULL returns trellis object, otherwise creates plot returns 0/1 success code.  return.stats FALSE: returns list whose first element trellis object filename) NULL, 0/1 otherwise, whose elements relevent statistics.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"Nathalie Moon","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.km.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to make complete Kaplan-Meier plots — create.km.plot","text":"","code":"set.seed(100);  survtime <- c(   sample(1:75, 100, replace = TRUE),   sample(1:99, 100, replace = TRUE)   );  survstat <- c(   sample( c(0,0,0,1,1), 100, replace = TRUE),   sample( c(0,0,0,1), 100, replace = TRUE)   );  survobj <- Surv(survtime, survstat); two.groups <- factor(c( rep('A', 100), rep('B', 100)), levels = c('A','B')); three.groups <- factor(c( rep('A', 100), rep('B', 50), rep('C', 50) ), levels = c('A','B','C'));  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25);  # simple survival plot with 2 risk groups BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   patient.groups = two.groups,   filename = \"simple.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   ); #> Warning: Note that the risk group labelled A will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: The cox.zph test yielded a small pvalue for the following factors: groups, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do.The cox.zph test yielded a small pvalue for the following factors: GLOBAL, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do. #> Warning: SEE BELOW FOR MULTI-POINT HR TABLE: #> Warning: contrasts dropped from factor groups #> Warning: Loglik converged before variable  1 ; coefficient may be infinite.  #> Warning: contrasts dropped from factor groups #> Error in solve.default(imat, u): Lapack routine dgesv: system is exactly singular: U[2,2] = 0  # survival plot with 2 risk groups, group B specified as reference group for cox analysis BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   patient.groups = factor(two.groups, levels=c(\"B\",\"A\")),   filename = \"simple.survival.plot2.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   ); #> Warning: Note that the risk group labelled B will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: The cox.zph test yielded a small pvalue for the following factors: groups, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do.The cox.zph test yielded a small pvalue for the following factors: GLOBAL, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do. #> Warning: SEE BELOW FOR MULTI-POINT HR TABLE: #> Warning: contrasts dropped from factor groups #> Warning: Loglik converged before variable  1 ; coefficient may be infinite.  #> Warning: contrasts dropped from factor groups #> Error in solve.default(imat, u): Lapack routine dgesv: system is exactly singular: U[2,2] = 0  # survival plot for single group BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   filename = \"single.group.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   ); #> Warning: No TIFF support in this version of R  # survival plot with three risk groups, customized (longer) group names BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   patient.groups = three.groups,   filename = \"three.group.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   key.groups.labels = c(\"Group A\",\"Group B\",\"Group C\"),   risk.labels = c(\"First Group\",\"Second Group\",\"Third Group\"),   ylab.axis.padding = 3.5,   left.padding = 3.5,   risk.label.pos = -5,   resolution = 200   ); #> Warning: No TIFF support in this version of R  # Creating data for six groups survtime.six.groups <- c(   sample(1:75, 105, replace = TRUE),   sample(1:99, 105, replace = TRUE)   );  survstat.six.groups <- c(   sample(c(0,1), 35, replace = TRUE),   sample(c(0,1,1), 35, replace = TRUE),   sample(c(0,1,1,1), 35, replace = TRUE),   sample(c(0,0,1,1,1), 35, replace = TRUE),   sample(c(0,0,1,1,1,1), 35, replace = TRUE),   sample(c(0,0,0,0,0,1,1), 35, replace = TRUE)   );  survobj.six.groups <- Surv(survtime.six.groups, survstat.six.groups);  six.groups <- factor(   c(     rep('A',35),     rep('B',35),     rep('C',35),     rep('D',35),     rep('E',35),     rep('F',35)     ),    levels = c('A','B','C','D','E','F')   );  # Survival plot with six risk groups, legend and statistical results in  # different locations BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.six.groups,   patient.groups = six.groups,   filename = \"simple.survival.plot.six.groups.tiff\",   xlimits = xlimits,   xat = xat,   key.stats.corner = c(0,0), # bottom left corner selected   key.stats.x.pos = 0,   key.stats.y.pos = 0.01,   key.groups.x.pos = 0,   key.groups.y.pos = 0.09,   resolution = 200   ); #> Warning: Colour scheme may not be greyscale compatible. #> Warning: No TIFF support in this version of R  ### Merge levels of a factor and then plot  survtime.stage <- c(   sample(1:99, 100, replace = TRUE),   sample(1:85, 100, replace = TRUE),   sample(1:60, 100, replace = TRUE),   sample(1:55, 100, replace = TRUE)   );  survstat.stage <- c(   sample( c(0,0,0,0,0,1), 100, replace = TRUE),   sample( c(0,0,0,1), 100, replace = TRUE),   sample( c(0,0,1,1), 100, replace = TRUE),   sample( c(0,1,1,1), 100, replace = TRUE)   );  survobj.stage <- Surv(survtime.stage, survstat.stage); groups.stage <- factor(c( rep('I', 100), rep('II', 100), rep('III', 100), rep('IV',100)),     levels = c('I','II','III','IV'));  # Survival plot with 4 risk groups, one for each stage BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.stage,   patient.groups = groups.stage,   filename = \"stage.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   ); #> Warning: Colour scheme may not be greyscale compatible. #> Warning: No TIFF support in this version of R  # merge stages I and II together, and stages II and III together by defining # new levels for the factor variables merged.stage.groups <- factor(x = groups.stage); levels(merged.stage.groups) <- list(   low.stage = c(\"I\",\"II\"),   high.stage = c(\"III\",\"IV\")   );  # Survival plot with merged stage groups BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.stage,   patient.groups = merged.stage.groups,   filename = \"merged.stage.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   left.padding = 1.5,   resolution = 200   ); #> Warning: Note that the risk group labelled low.stage will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: The cox.zph test yielded a small pvalue for the following factors: groups, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do.The cox.zph test yielded a small pvalue for the following factors: GLOBAL, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do. #> Warning: SEE BELOW FOR MULTI-POINT HR TABLE: #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #>          n      wald.p global.ph.p  group_HR group_CI95l group_CI95h #> Time5  400 0.024210342   0.2157467  5.654842    1.253396    25.51247 #> Time10 372 0.009940603   0.2055296 14.516669    1.898898   110.97682 #>        group_cox.p group_ph.p #> Time5  0.024210342  0.2157467 #> Time10 0.009940603  0.2055296 #> Warning: No TIFF support in this version of R  # Survival plot with group 3 vs 2 only, and produce Schoenfeld residual plot to check PH assumption BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.stage,   patient.groups = factor(groups.stage, levels = c(\"II\",\"III\")),   filename = \"subset.of.stages.survival.plot.tiff\",   ph.assumption.check = \"residual.plot\",   xlimits = xlimits,   xat = xat,   resolution = 200   ); #> Warning: Note that the risk group labelled II will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: No TIFF support in this version of R  # Create data that will fail PH assumption survtime.ph <- c(   sample(1:100, 100, replace = TRUE),   sample(1:60, 50, replace = TRUE),   sample(40:100, 50, replace = TRUE)   );  survstat.ph <- c(   sample( c(0,1), 100, replace = TRUE),   sample( c(0,0,0,0,1), 50, replace = TRUE),   sample( c(0,1,1,1,1), 50, replace = TRUE)   );  survobj.ph <- Surv(survtime.ph, survstat.ph); groups.ph <- factor(c(rep('A', 100), rep('B', 100)), levels = c('A','B')); gender.ph <- factor(sample(c(\"Male\",\"Female\"), 200, replace = TRUE), levels = c(\"Male\",\"Female\")); score.ph <- rgamma(n=200, shape = 20, rate=1); # this is just an arbitrary \"continuous\" variable  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25);  # Survival plot with PH assumption checking (warning on plot) BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.ph,   patient.groups = factor(groups.ph, levels = c(\"A\",\"B\")),   covariates = data.frame(gender.ph, score.ph),   filename = \"ph.warning.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   ph.assumption.check = \"warning.and.plot\",   resolution = 200   ); #> Warning: Note that the risk group labelled A will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: The cox.zph test yielded a small pvalue for the following factors: groups, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do. #> Warning: SEE BELOW FOR MULTI-POINT HR TABLE: #> Warning: Loglik converged before variable  1,2 ; coefficient may be infinite.  #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #>          n    wald.p global.ph.p   groups2_HR groups2_CI95l groups2_CI95h #> Time5  200 0.9257696   0.9811706 9.075218e-10    0.00000000           Inf #> Time10 189 0.5495586   0.3630171 6.976591e-01    0.03821815      12.73552 #>        groups2_cox.p groups2_ph.p gender.phFemale_HR gender.phFemale_CI95l #> Time5      0.9992556    0.9999996       9.444266e+08            0.00000000 #> Time10     0.8080423    0.1605790       9.580891e-01            0.05302127 #>        gender.phFemale_CI95h gender.phFemale_cox.p gender.phFemale_ph.p #> Time5                    Inf             0.9992635            0.9999997 #> Time10              17.31258             0.9768697            0.1605790 #>        score.ph_HR score.ph_CI95l score.ph_CI95h score.ph_cox.p score.ph_ph.p #> Time5    0.9038679      0.6767115       1.207276      0.4937094     0.6737190 #> Time10   0.6567306      0.3716206       1.160579      0.1477958     0.5676549 #> Warning: contrasts dropped from factor groups #> Error in BoutrosLab.utilities::generate.filename(project.stem = paste(gsub(\".tiff\",     \"\", filename), \"Schoenfeld.residuals\", sep = \"_\"), file.core = names(pvalues.zph)[i],     extension = \"tiff\", file.date = FALSE): Invalid characters found in: ph.warning.survival.plot_Schoenfeld.residuals #> Needs to be alphanumeric [a-zA-Z0-9] , dash (-), or dot (.)  # Survival plot with PH assumption checking (switch to logrank test if fails) BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj.ph,   patient.groups = factor(groups.ph, levels = c(\"A\",\"B\")),   filename = \"ph.logrank.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   ph.assumption.check = \"logrank\",   resolution = 200   ); #> Warning: Note that the risk group labelled A will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: The cox.zph test yielded a small pvalue for the following factors: groups, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do.The cox.zph test yielded a small pvalue for the following factors: GLOBAL, so the PH assumption may not be valid. Use a non-parametric test (log-rank) to get the pvalue. If Cox modelling is desired, use stratified model or time-varying covariate. Talk to Paul if you are not sure what to do. #> Warning: SEE BELOW FOR MULTI-POINT HR TABLE: #> Warning: Loglik converged before variable  1 ; coefficient may be infinite.  #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #>          n    wald.p global.ph.p     group_HR group_CI95l group_CI95h #> Time5  200 0.9988558   0.9999993 1.711635e-09  0.00000000         Inf #> Time10 189 0.9875313   0.1573246 1.022347e+00  0.06394662    16.34478 #>        group_cox.p group_ph.p #> Time5    0.9988558  0.9999993 #> Time10   0.9875313  0.1573246 #> Warning: The cox.zph test yielded a small pvalue so the PH assumption may not be valid. The statistical method was changed from 'cox' to 'logrank', because the logrank test is nonparametric. Talk to Paul if you are not sure what to do. #> Warning: No TIFF support in this version of R  # Example with and without stratification set.seed(151) survtime <- sample(seq(0.1,10,0.1), 100, replace = TRUE); survstat <- sample(c(0,1), 100, replace = TRUE); survobj <- Surv(survtime, survstat); groups <- sample(c('A','B'), 100, replace = TRUE); gender <- factor(sample(c('Male','Female'), 100, replace = TRUE), levels=c(\"Male\",\"Female\")); age <- factor(sample(c('Young','MiddleAged','Old'), 100, replace = TRUE),     levels = c('Young', 'MiddleAged', 'Old'));  BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   patient.groups = as.factor(groups),   filename = \"surv.plot.no.stratification.tiff\",   covariates = data.frame(age, gender)   ); #> Warning: Note that the risk group labelled A will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: No TIFF support in this version of R  BoutrosLab.plotting.survival::create.km.plot(   survival.object = survobj,   patient.groups = as.factor(groups),   filename = \"surv.plot.with.stratification.tiff\",   covariates = data.frame(age),   stratification.factor = gender   ); #> Warning: Note that the risk group labelled A will be used as the baseline risk group. If this is not what is desired, please add a \"levels\" argument to the factor passed to patient.groups, where the first factor refers to the baseline group #> Warning: contrasts dropped from factor groups #> Warning: contrasts dropped from factor groups #> Warning: No TIFF support in this version of R"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"major plotting function takes meta-analytic dataset weighted multi-feature signature outputs survival curve based dataset-wise median dichotomization signature. Per-patient classifications can also written file.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"","code":"create.meta.multifeature.prognosis.plot(expression.data, survival.data, feature.names,     feature.weights, filename, xlab.label = \"Time (Years)\",     ylab.label = \"Fraction of Cohort\", xlimits, xat, label.times, label.positions,     label.cex = 1.2, main = NULL, main.cex = 3.0, rounding = 3, covariates = NULL,     survival.file = NA, line.colours = c(\"blue\", \"red\"), resolution = 2000,     enable.warnings = FALSE, description = NULL);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"expression.data list matrices, list element representing expression matrix separate dataset survival.data list survival objects, list element representing survobj separate dataset feature.names vector containing name features signature feature.weights vector containing weight features signature filename filename written xlab.label X Axis Title.  Defaults 'Time (Years)' ylab.label Y Axis Title.  Defaults 'Fraction Cohort' xlimits limits x (time) axis xat locations x-axis labels label.times vector times calculate fraction patients still risk label.positions vector positions print fraction patients still risk label.cex Size patients risk text main main title plot (space reclaimed NULL) main.cex Size text main plot title rounding many decimal places precision shown printed survival statistics? covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. survival.file name file output per-patient scores classifications, NA output (default) line.colours vector colours used plotting resolution Figure resolution, defaults 2000 enable.warnings Print warnings set TRUE, defaults FALSE description Short description image/plot, defaults NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"Returns survival curve (written file) four-element vector containing survival results possibly (depending setting survival.file) per-patient classifications written file. NB: covariate handling intuitive relied upon yet.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.multifeature.prognosis.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a pretty Kaplan-Meier by scoring a multi-feature signature — create.meta.multifeature.prognosis.plot","text":"","code":"# add examples"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"major plotting function takes meta-analytic dataset feature-name outputs survival curve based dataset-wise median dichotomization feature.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"","code":"create.meta.prognosis.plot(expression.data, survival.data, feature.name, filename,     xlab.label = \"Time (Years)\", ylab.label = \"Fraction of Cohort\", xlimits, xat,     label.times, label.positions, label.cex = 1.2, main = NULL, main.cex = 3.0,     rounding = 2, covariates = NULL, line.colours = c(\"blue\", \"red\"), resolution = 2000,     enable.warnings = FALSE, description = NULL);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"expression.data list matrices, list element representing expression matrix separate dataset survival.data list survival objects, list element representing survobj separate dataset feature.name name feature dichotomized filename filename written xlab.label X Axis Title.  Defaults 'Time (Years)' ylab.label Y Axis Title.  Defaults 'Fraction Cohort' xlimits limits x (time) axis xat locations x-axis labels label.times vector times calculate fraction patients still risk label.positions vector positions print fraction patients still risk label.cex Size patients risk text main main title plot (space reclaimed NULL) main.cex Size text main plot title rounding many decimal places precision shown printed survival statistics? covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. line.colours vector colours used plotting resolution Figure resolution, defaults 2000 enable.warnings Print warnings set TRUE, defaults FALSE description Short description image/plot, defaults NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"Returns survival curve (written file) four-element vector containing survival results.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.meta.prognosis.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a Kaplan-Meier plot by meta-dichotomizing a feature — create.meta.prognosis.plot","text":"","code":"# add examples"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"utility function makes pretty Kaplan-Meier survival curve given survival data patient grouping. highly general function little survival data .  function deprecated - use create.km.plot instead.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"","code":"create.survival.plot(   survival.object,    patient.groups = NA,    filename = NULL,    xat = NA,    yat = seq(0,1,0.2),   xlimits = NA,    ylimits = c(0,1.03),   xaxis.cex = 2,   yaxis.cex = 2,   xlab.label = 'Time (Months)',   xlab.cex = 2.75,   ylab.label = 'Proportion',   ylab.cex = 2.75,   risk.labels = NA,   key.groups.labels = levels(as.factor(patient.groups)),   risk.label.pos = NA,   key.groups.title = NULL,    explicit.HR.label = TRUE,   main = NULL,    main.cex = 3.0,   covariates = NULL,   stratification.factor = NULL,   lwd = 2,   censoring.pch.cex = 1.1,   digits = 2,    line.colours = NA,    statistical.method = NA,   ph.assumption.check = \"warning\",   cox.zph.threshold = 0.1,    show.key.groups = NA,    show.risktable = TRUE,    key.groups.corner = c(0,0),    key.groups.x.pos = 0,    key.groups.y.pos = 0.01,    key.stats.corner = c(1,0),    key.stats.x.pos = 1,    key.stats.y.pos = 0.01,    ylab.axis.padding = 1,   bottom.padding = 0.7,     top.padding = 0.1,   right.padding = 0.1,   left.padding = 0.5,   return.statistics = FALSE,   height = 7,    width = 7,    resolution = 1000,    size.units = 'in',    enable.warnings = TRUE,    description = NULL   );"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"survival.object object class Surv -- patient ordering needs identical patient.groups patient.groups Factor vector representing grouping patients.  first level factor baseline risk group, used 'cox' selected statistical method.  Note even statistical.method = NA, cox method may selected function, judicious choice made.  patient.groups factor, coerced factor variable, baseline risk group taken risk group comes first alpha-numerically.  plot, baseline risk group appears first risk table legend, Kaplan-Meier estimate plotted blue.  plot survival curves subset groups factor, specifies desired groups \"levels\" argument factor. filename filename written xat vector listing points x-axis labels drawn yat vector listing points y-axis labels drawn.  Defaults seq(0,1,0.2) xlimits two component vector listing upper lower bounds x-axis (time dimension) ylimits two component vector listing upper lower bounds y-axis.  Defaults c(0,1.03) xaxis.cex Size x-axis scales, defaults 2 yaxis.cex Size y-axis scales, defaults 2 xlab.label X Axis Title xlab.cex Size x-axis labels, defaults 2.75 ylab.label Y Axis Title.  Defaults \"Proportion\", customized better describe survival outcome interest. ylab.cex Size y-axis labels, defaults 2.75 risk.labels character vector gives labels risk groups risk table.  Defaults full name risk group one risk group, blank string otherwise.  Useful replace long names shorter ones.) key.groups.labels character vector gives labels legend (listing name line colour group).  Defaults full name risk groups.  Useful replace long names shorter ones. risk.label.pos value x-axis position risk labels (risk table KM plot).  value typically negative, order appear left value '0' x axis. key.groups.title Title legend listing group names line colours.  Defaults NULL. explicit.HR.label TRUE, prints label comparison risk group subscript HR.  effect cox statistical method used.  Defaults TRUE. main main title plot (space reclaimed NULL) main.cex Size text main plot title covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. stratification.factor building cox model statistical analysis purposes, resulting cox model stratified stratification.factor (non-NULL).  User needs provide factor vector specify stratification.factor Defaults NULL. lwd Specifies line width, defaults 2.5 censoring.pch.cex Specifies length tick marks indicating censoring events, defaults 1.1 digits many decimal places precision shown printed survival statistics line.colours vector colours used plotting.  Defaults survival palette BoutrosLab.plotting.general::default.colours statistical.method string indicating statistical test done ('cox', 'logrank', 'ttest', 'none'). NA, tries choose intelligently ph.assumption.check string indicating result Proportional Hazards assumption check (using cox.zph function) reported.  \"warning\", warning printed plot pvalue cox.zph smaller cox.zph.threshold.  \"warning..plot\", warning printed plot Schoenfeld residual plot produced saved pvalue smaller cox.zph.threshold.  \"logrank\", statistical method changed logrank pvalue smaller cox.zph.threshold.  \"residual.plot\", Schoenfled residual plot produced saved tiff, matter results cox.zph test .  \"ignore\", cox.zph test performed .  Defaults \"warning\". cox.zph.threshold Numeric value, 0 1).  pvalue cox.zph test smaller cox.zph.threshold, warnings provided user, indicating PH assumption may valid.  Defaults 0.1 show.key.groups Defaults FALSE one risk group, TRUE otherwise show.risktable Defaults TRUE optimal display values listed corresponding number risk groups optimal.risktable.parameters.txt file inst directory (currently 1 10 risk groups).  Otherwise, defaults FALSE. key.groups.corner two-component vector specifiying corner groups key anchored key.groups.x.pos key.groups.y.pos.  Defaults c(0,0), .e. bottom left corner. key.groups.x.pos Specifies x position groups key (scale 0-1).  Defaults 0 key.groups.y.pos Specifies y position groups key (scale 0-1).  Defaults 0.01 key.stats.corner two-component vector specifying corner statistical results key anchored key.stats.x.pos key.stats.y.pos.  Defaults c(1,0), .e. bottom right corner. key.stats.x.pos Specifies x position statistical results key (scale 0-1).  Defaults 1 key.stats.y.pos Specifies y position statistical results key (scale 0-1).  Defaults 0.01 ylab.axis.padding number specifying distance ylabel y-axis, defaults 1.  parameter (along left.padding) can changed make space display long group names risk table. bottom.padding number specifying distance bottom margin, defaults 0.7 top.padding number specifying distance top margin, defaults 0.1 right.padding number specifying distance right margin, defaults 0.1 left.padding number specifying distance left margin, defaults 0.5.  parameter (along ylab.axis.padding) can changed make space display long group names risk table. return.statistics TRUE, function return list containing trellis object (0/1 indicator) relevant statistics.  FALSE, statistics returned.  Defaults FALSE. height Figure height size.units width Figure width size.units resolution Figure resolution dpi size.units Units size figure enable.warnings Print warnings set TRUE, defaults TRUE description Short description image/plot, defaults NULL","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"return.stats TRUE: filename NULL returns trellis object, otherwise creates plot returns 0/1 success code.  return.stats FALSE: returns list whose first element trellis object filename) NULL, 0/1 otherwise, whose elements relevent statistics.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"Nathalie Moon","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/create.survival.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to make complete Kaplan-Meier plots — create.survival.plot","text":"","code":"set.seed(100);  survtime <- c(   sample(1:75, 100, replace = TRUE),   sample(1:99, 100, replace = TRUE)   );  survstat <- c(   sample( c(0,0,0,1,1), 100, replace = TRUE),   sample( c(0,0,0,1), 100, replace = TRUE)   );  survobj <- Surv(survtime, survstat); two.groups <- factor(c( rep('A', 100), rep('B', 100)), levels = c('A','B')); three.groups <- factor(c( rep('A', 100), rep('B', 50), rep('C', 50) ), levels = c('A','B','C'));  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25);  # simple survival plot with 2 risk groups BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj,   patient.groups = two.groups,   filename = \"simple.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   );  # survival plot with 2 risk groups, group B specified as reference group for cox analysis BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj,   patient.groups = factor(two.groups, levels=c(\"B\",\"A\")),   filename = \"simple.survival.plot2.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   );  # survival plot for single group BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj,   filename = \"single.group.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   );  # survival plot with three risk groups, customized (longer) group names BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj,   patient.groups = three.groups,   filename = \"three.group.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   key.groups.labels = c(\"Group A\",\"Group B\",\"Group C\"),   risk.labels = c(\"First Group\",\"Second Group\",\"Third Group\"),   ylab.axis.padding = 3.5,   left.padding = 3.5,   risk.label.pos = -5,   resolution = 200   );  # Creating data for six groups survtime.six.groups <- c(   sample(1:75, 105, replace = TRUE),   sample(1:99, 105, replace = TRUE)   );  survstat.six.groups <- c(   sample(c(0,1), 35, replace = TRUE),   sample(c(0,1,1), 35, replace = TRUE),   sample(c(0,1,1,1), 35, replace = TRUE),   sample(c(0,0,1,1,1), 35, replace = TRUE),   sample(c(0,0,1,1,1,1), 35, replace = TRUE),   sample(c(0,0,0,0,0,1,1), 35, replace = TRUE)   );  survobj.six.groups <- Surv(survtime.six.groups, survstat.six.groups);  six.groups <- factor(   c(     rep('A',35),     rep('B',35),     rep('C',35),     rep('D',35),     rep('E',35),     rep('F',35)     ),    levels = c('A','B','C','D','E','F')   );  # Survival plot with six risk groups, legend and statistical results in  # different locations BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.six.groups,   patient.groups = six.groups,   filename = \"simple.survival.plot.six.groups.tiff\",   xlimits = xlimits,   xat = xat,   key.stats.corner = c(0,0), # bottom left corner selected   key.stats.x.pos = 0,   key.stats.y.pos = 0.01,   key.groups.x.pos = 0,   key.groups.y.pos = 0.09,   resolution = 200   );  ### Merge levels of a factor and then plot  survtime.stage <- c(   sample(1:99, 100, replace = TRUE),   sample(1:85, 100, replace = TRUE),   sample(1:60, 100, replace = TRUE),   sample(1:55, 100, replace = TRUE)   );  survstat.stage <- c(   sample( c(0,0,0,0,0,1), 100, replace = TRUE),   sample( c(0,0,0,1), 100, replace = TRUE),   sample( c(0,0,1,1), 100, replace = TRUE),   sample( c(0,1,1,1), 100, replace = TRUE)   );  survobj.stage <- Surv(survtime.stage, survstat.stage); groups.stage <- factor(c( rep('I', 100), rep('II', 100), rep('III', 100), rep('IV',100)),     levels = c('I','II','III','IV'));  # Survival plot with 4 risk groups, one for each stage BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.stage,   patient.groups = groups.stage,   filename = \"stage.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   resolution = 200   );  # merge stages I and II together, and stages II and III together by defining # new levels for the factor variables merged.stage.groups <- factor(x = groups.stage); levels(merged.stage.groups) <- list(   low.stage = c(\"I\",\"II\"),   high.stage = c(\"III\",\"IV\")   );  # Survival plot with merged stage groups BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.stage,   patient.groups = merged.stage.groups,   filename = \"merged.stage.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   left.padding = 1.5,   resolution = 200   );  # Survival plot with group 3 vs 2 only, and produce Schoenfeld residual plot to check PH assumption BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.stage,   patient.groups = factor(groups.stage, levels = c(\"II\",\"III\")),   filename = \"subset.of.stages.survival.plot.tiff\",   ph.assumption.check = \"residual.plot\",   xlimits = xlimits,   xat = xat,   resolution = 200   );  # Create data that will fail PH assumption survtime.ph <- c(   sample(1:100, 100, replace = TRUE),   sample(1:60, 50, replace = TRUE),   sample(40:100, 50, replace = TRUE)   );  survstat.ph <- c(   sample( c(0,1), 100, replace = TRUE),   sample( c(0,0,0,0,1), 50, replace = TRUE),   sample( c(0,1,1,1,1), 50, replace = TRUE)   );  survobj.ph <- Surv(survtime.ph, survstat.ph); groups.ph <- factor(c(rep('A', 100), rep('B', 100)), levels = c('A','B')); gender.ph <- factor(sample(c(\"Male\",\"Female\"), 200, replace = TRUE), levels = c(\"Male\",\"Female\")); score.ph <- rgamma(n=200, shape = 20, rate=1); # this is just an arbitrary \"continuous\" variable  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25);  # Survival plot with PH assumption checking (warning on plot) BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.ph,   patient.groups = factor(groups.ph, levels = c(\"A\",\"B\")),   covariates = data.frame(gender.ph, score.ph),   filename = \"ph.warning.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   ph.assumption.check = \"warning.and.plot\",   resolution = 200   );  # Survival plot with PH assumption checking (switch to logrank test if fails) BoutrosLab.plotting.survival::create.survival.plot(   survival.object = survobj.ph,   patient.groups = factor(groups.ph, levels = c(\"A\",\"B\")),   filename = \"ph.logrank.survival.plot.tiff\",   xlimits = xlimits,   xat = xat,   ph.assumption.check = \"logrank\",   resolution = 200   );  # Example with and without stratification set.seed(151) survtime <- sample(seq(0.1,10,0.1), 100, replace = TRUE); survstat <- sample(c(0,1), 100, replace = TRUE); survobj <- Surv(survtime, survstat); groups <- sample(c('A','B'), 100, replace = TRUE); gender <- factor(sample(c('Male','Female'), 100, replace = TRUE), levels=c(\"Male\",\"Female\")); age <- factor(sample(c('Young','MiddleAged','Old'), 100, replace = TRUE),     levels = c('Young', 'MiddleAged', 'Old'));  create.survival.plot(   survival.object = survobj,   patient.groups = as.factor(groups),   filename = \"surv.plot.no.stratification.tiff\",   covariates = data.frame(age, gender)   );  create.survival.plot(   survival.object = survobj,   patient.groups = as.factor(groups),   filename = \"surv.plot.with.stratification.tiff\",   covariates = data.frame(age),   stratification.factor = gender   );"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make Kaplan-Meier plots — make.survfit.plot","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"utility function makes half Kaplan-Meier survival curve.  needs called twice, patients event overall curve.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"","code":"make.survfit.plot(x, xlimits, xat, type = 1, main = NULL, main.cex = 3.0,     line.colours = c(\"blue\", \"red\"), enable.warnings = FALSE,...);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"x object class survfit xlimits two component vector listing upper lower bounds x-axis (time dimension) xat vector listing points x-axis labels drawn type type = 1, draws step curve.  type = 2, draws censored points main main title plot (space reclaimed NULL) main.cex Size text main plot title line.colours vector colours used plotting enable.warnings Print warnings set TRUE, defaults FALSE ... additional parameters passed xyplot","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"function rarely called directly, instead used larger plotting functions.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"Takes survfit object returns lattice object containing part Kaplan-Meier curve. practical cases needs called twice, type = 1 type = 2.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survfit.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to make Kaplan-Meier plots — make.survfit.plot","text":"","code":"# create some synthetic survival data survstat <- sample(c(0,1), 100, TRUE); survtime <- runif(100) * 100 / 12; survobj  <- Surv(survtime, survstat); groups   <- sample(c(0,1), 100, TRUE);  # set the graphics driver current.type <- getOption(\"bitmapType\"); options(bitmapType = \"cairo\");  # open output file tiff(   filename = \"Test Plot.tiff\",   height = 7,   width = 7,   units = \"in\",   res = 100,   compression = \"lzw\"   );  # plot the step curve plot(   x = make.survfit.plot(     x = survfit(survobj ~ groups),     xlimits = c(0,9),     xat = seq(0,9,3),     type = 1,     main = 'Test Plot',     enable.warnings = TRUE     ),   position = c(0.03,0.2,1.0,1.0),   newpage = TRUE   );  # without creating a new plot, add the censored points plot(   x = make.survfit.plot(     x = survfit(survobj ~ groups),     xlimits = c(0,9),     xat = seq(0,9,3),     type = 2,     main = 'Test Plot',     enable.warnings = TRUE     ),   position = c(0.03,0.2,1.0,1.0),   newpage = FALSE   );  # finish plot dev.off(); #> Warning: No TIFF support in this version of R #> agg_png  #>       2  options(bitmapType = current.type);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"utility function makes pretty Kaplan-Meier survival curve given survival data patient grouping. highly general function little survival data .","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"","code":"make.survival.plot(survival.object, patient.groups, filename, xlimits, xat,     label.positions, label.cex = 1.2, at.risk.low, at.risk.high,     risk.labels = c(\"Low\", \"High\"), main = NULL, main.cex = 3.0, rounding = 2,     covariates = NULL, line.colours = c(\"blue\", \"red\"), key = NULL,     statistical.method = NA, x.statistic = 0.200, y.statistic = 0.610,     resolution = 2000, height = 7.007874, width = 7.007874, size.units = 'in',     enable.warnings = FALSE);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"survival.object object class Surv -- patient ordering needs identical patient.groups patient.groups Grouping patients (passed directly coxph, factors & continuous variables okay) filename filename written xlimits two component vector listing upper lower bounds x-axis (time dimension) xat vector listing points x-axis labels drawn label.positions vector positions print fraction patients still risk label.cex Size patients risk text .risk.low vector containing number patients low-risk group label.position .risk.high vector containing number patients high-risk group label.position risk.labels character(2) vector gives labels -risk rows main main title plot (space reclaimed NULL) main.cex Size text main plot title rounding many decimal places precision shown printed survival statistics? covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. line.colours vector colours used plotting key list describing legend one wants add plot, defaults legend statistical.method character indicating statistical test done ('cox', 'logrank', 'ttest'). NA, tries choose intelligently x.statistic x position statistical data, defaults left y.statistic y position statistical data, defaults low resolution Figure resolution dpi height Figure height size.units width Figure width size.units size.units Units size figure enable.warnings Print warnings set TRUE, defaults FALSE","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"Creates tiff file containing full Kaplan-Meier curve, including number patients risk multiple time-points.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"Paul C. Boutros","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot","text":"","code":"# create some artificial data survtime <- c(   sample(1:75, 100, replace = TRUE),   sample(1:99, 100, replace = TRUE)   );  survstat <- c(   sample( c(0,1,1), 100, replace = TRUE),   sample( c(0,0,1), 100, replace = TRUE)   )  survobj <- Surv(survtime, survstat); groups <- as.factor(c( rep('A', 100), rep('B', 100) ));  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25); label.times <- seq(0,100,20); label.positions <- 0.167 + 0.1605 * (1:length(label.times) - 1);  make.survival.plot(   survival.object = survobj,   patient.groups = groups,   filename = 'survival_plot_simple.tiff',   xlimits = xlimits,   xat = xat,   label.positions = label.positions,   at.risk.low = calculate.number.at.risk(     survobj = survobj[groups == 'B',],     cut.points = label.times     ),   at.risk.high = calculate.number.at.risk(     survobj = survobj[groups == 'A',],     cut.points = label.times     ),   risk.labels = c('A = High', 'B = Low'),   resolution = 100   ); #> Warning: This function will be deprecated -- consider using create.survival.plot.R() instead #> Warning: No TIFF support in this version of R #> [1] 9.53513e-07 3.20000e-01 2.00000e-01 5.00000e-01"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"utility function makes pretty Kaplan-Meier survival curve given survival data 3 patient groups copy number data (rather default make.survival.plot.R takes dichotomized groups). highly general function little survival data .","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"","code":"make.survival.plot.ternary(survival.object, patient.groups, filename, xlimits, xat,     label.positions, label.cex = 1.2, at.risk.low, at.risk.medium, at.risk.high,     risk.labels = c(\"Low\", \"Medium\", \"High\"), main = NULL, main.cex = 3.0,     rounding = 2, covariates = NULL, line.colours = c(\"blue\", \"black\", \"red\"),     key = NULL, resolution = 2000, height = 7.007874, width = 7.007874,     size.units = 'in', enable.warnings = FALSE);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"survival.object object class Surv -- patient ordering needs identical patient.groups patient.groups Grouping patients (passed directly coxph, factors & continuous variables okay) filename filename written xlimits two component vector listing upper lower bounds x-axis (time dimension) xat vector listing points x-axis labels drawn label.positions vector positions print fraction patients still risk label.cex Size patients risk text .risk.low vector containing number patients low-risk group label.position .risk.medium vector containing number patients intermediate-risk group label.position .risk.high vector containing number patients high-risk group label.position risk.labels character(2) vector gives labels -risk rows main main title plot (space reclaimed NULL) main.cex Size text main plot title rounding many decimal places precision shown printed survival statistics? covariates data-frame (matrix?) variables controlled Cox model. null, adjustment done.  interactions fit. line.colours vector colours used plotting key list describing legend one wants add plot, defaults legend resolution Figure resolution dpi height Figure height size.units width Figure width size.units size.units Units size figure enable.warnings Print warnings set TRUE, defaults FALSE","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"Creates tiff file containing full Kaplan-Meier curve, including number patients risk multiple time-points.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"Emilie Lalonde","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/make.survival.plot.ternary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to make complete Kaplan-Meier plots — make.survival.plot.ternary","text":"","code":"# create some artificial data survtime <- c(   sample(1:75, 100, replace = TRUE),   sample(30:99, 100, replace = TRUE),   sample(30:75, 100, replace = TRUE)   );  survstat <- c(   sample( c(0,0,1), 100, replace = TRUE),   sample( c(0,1,1), 100, replace = TRUE),   sample( c(1,0,1), 100, replace = TRUE)   )  survobj <- Surv(survtime, survstat); groups <- as.factor(c( rep('A', 100), rep('B', 100), rep('C', 100) ));  # set some plotting parameters xlimits <- c(0,100); xat <- seq(0,100,25); label.times <- seq(0,100,20); label.positions <- 0.167 + 0.1605 * (1:length(label.times) - 1);  make.survival.plot.ternary(   survival.object = survobj,   patient.groups = groups,   filename = 'survival_plot_simple.tiff',   xlimits = xlimits,   xat = xat,   label.positions = label.positions,   at.risk.medium = calculate.number.at.risk(     survobj = survobj[groups == 'B',],     cut.points = label.times     ),   at.risk.low = calculate.number.at.risk(     survobj = survobj[groups == 'A',],     cut.points = label.times     ),   at.risk.high = calculate.number.at.risk(     survobj = survobj[groups == 'C',],     cut.points = label.times     ),   risk.labels = c('Gain', 'Neutral', 'Deletion'),   resolution = 100   ); #> Warning: This function will be deprecated -- consider using create.survival.plot.R() instead #> Warning: No TIFF support in this version of R"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"utility function produces Schoenfeld residual plots (.tiff files), variable coxph model.  Relevant pvalues printed plot.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"","code":"schoenfeld.residual.plots(cox.model, filename);"},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"cox.model coxph object Schoenfeld residual plots produced. filename String specifiying root filename Schoenfeld residual plots.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"variable coxph model, creates tiff file containing plot Schoenfeld residuals.","code":""},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"Nathalie Moon","code":""},{"path":[]},{"path":"https://uclahs-cds.github.io/public-R-BoutrosLab-plotting-survival/reference/schoenfeld.residual.plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function to produce Schoenfeld residual plots — schoenfeld.residual.plots","text":"","code":"set.seed(100);  survtime <- c(   sample(1:75, 100, replace = TRUE),   sample(1:99, 100, replace = TRUE)   );  survstat <- c(   sample( c(0,0,0,1,1), 100, replace = TRUE),   sample( c(0,0,0,1), 100, replace = TRUE)   );  survobj <- Surv(survtime, survstat); three.groups <- factor(c( rep('A', 100), rep('B', 50), rep('C', 50) ), levels = c('A','B','C'));  cox.model <- fit.coxmodel(   groups = three.groups,   survobj = survobj,   return.cox.model = TRUE   )  schoenfeld.residual.plots(cox.model = cox.model, filename = \"testing\"); #> Error in BoutrosLab.utilities::generate.filename(project.stem = paste(gsub(\".tiff\",     \"\", filename), \"Schoenfeld.residuals\", sep = \"_\"), file.core = names(pvalues.zph)[i],     extension = \"tiff\", file.date = FALSE): Invalid characters found in: testing_Schoenfeld.residuals #> Needs to be alphanumeric [a-zA-Z0-9] , dash (-), or dot (.)"}]
